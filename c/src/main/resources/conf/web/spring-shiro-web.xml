<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
     http://www.springframework.org/schema/context 
     http://www.springframework.org/schema/context/spring-context.xsd
     http://www.springframework.org/schema/beans 
     http://www.springframework.org/schema/beans/spring-beans.xsd"
	default-autowire="byName">
	<description>shiro配置</description>

	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="/" />
		<property name="unauthorizedUrl" value="/resources/errors/unauthorized.jsp" />
<!-- 		<property name="filters">
			<map>
				<entry key="authc" value-ref="formAuthenticationFilter" />
			</map>
		</property>
 -->		<property name="filterChainDefinitions">
			<value>
				<!-- 添加系统级别的默认角色，请勿随意做出更改或删除 -->
				<!-- /*=anon /oc/**=authc, roles[services] -->
				/v/**=anon
				/back/**=authc,roles[administrator]
				/oc/jt-user/signin=anon
				/oc/**=authc
				/ws/s =authc
				/chat/**=authc
				/work/**=authc
			</value>
		</property>
	</bean>
	<!-- 登录拦截器 -->
	<!-- <bean id="formAuthenticationFilter" class="com.hitler.web.realm.FormLoginFilter" /> -->
	<!-- 安全管理器 配置多个realm -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="sessionManager" ref="sessionManager"/>
	<!-- 	<property name="authenticator" ref="authenticator" /> -->
		<property name="cacheManager" ref="memoryConstrainedCacheManager" />  
		<property name="realms">
			<list>
				<ref bean="userRealm" />
			</list>
		</property>
	</bean>

	<!-- 项目自定义的Realm, 所有Realm依赖的Service及DAO都需要用depends-on(在此之前加载)声明 -->
	<bean id="userRealm" class="com.hitler.web.realm.UserRealm">
		<!-- <property name="userService" ref="userService"></property> -->
		<property name="credentialsMatcher" ref="passwordMatcher" />
	</bean>
	
	<bean id="memoryConstrainedCacheManager" class="org.apache.shiro.cache.MemoryConstrainedCacheManager" /> 

	<bean id="passwordMatcher"
		class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
		<property name="hashAlgorithmName" value="md5"></property>
		<property name="hashIterations" value="2"></property>
		<property name="storedCredentialsHexEncoded" value="true"></property>
	</bean>

	<!-- 使用Shiro相关的注解 -->
	<!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />
	<bean
		class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
		depends-on="lifecycleBeanPostProcessor">
		<property name="proxyTargetClass" value="true" />
	</bean>
	<bean
		class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>
	    
	<!-- ================会话管理器================================START -->
	<bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
			<constructor-arg value="sid"/>
			<!-- <constructor-arg name="name" value="SHRIOSESSIONID" /> -->
			<property name="httpOnly" value="true"/>
			<property name="maxAge" value="-1"/>
	</bean>
	<!-- 会话ID生成器 -->
    <bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/>
     <!-- 会话DAO -->
    <bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">
        <property name="activeSessionsCacheName" value="shiro-activeSessionCache"/>
        <property name="sessionIdGenerator" ref="sessionIdGenerator"/>
    </bean>
    <!-- 会话验证调度器 -->
    <bean id="sessionValidationScheduler" class="org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler">
        <property name="interval" value="1800000"/>
        <property name="sessionManager" ref="sessionManager"/>
    </bean> 
    
    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
    	<!--session超时时间=pushlet超时时间+globalSessionTimeout,因为只有pushlet连接中断后
    	才开始算页面无任何操作,pushlet.properties文件下设置超时参数session.timeout.mins-->
        <property name="globalSessionTimeout" value="1800000"/><!--60秒测试;过期时间1800000=30分钟  -->
        <property name="deleteInvalidSessions" value="true"/>
        <property name="sessionValidationSchedulerEnabled" value="true"/>
        <property name="sessionValidationScheduler" ref="sessionValidationScheduler"/>
        <property name="sessionDAO" ref="sessionDAO"/> 
        <property name="sessionIdCookieEnabled" value="true"/>
       <!-- <property name="cacheManager" ref="cacheManager"/> -->
        <property name="sessionIdCookie" ref="sessionIdCookie"/>
        <property name="sessionListeners">
        	<list>
        		<ref bean="mySessionListener"/>
        	</list>
        </property>
    </bean>
    <bean id="mySessionListener" class="com.hitler.web.realm.ShiroSessionListener"></bean>
    <!-- ================会话管理器================================END -->
</beans>